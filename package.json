{
    "name": "netron",
    "productName": "Netron",
    "author": {
        "name": "Lutz Roeder",
        "email": "lutzroeder@users.noreply.github.com",
        "url": "https://www.lutzroeder.com"
    },
    "version": "5.9.4",
    "description": "Visualizer for neural network, deep learning, and machine learning models",
    "license": "MIT",
    "repository": "lutzroeder/netron",
    "main": "source/app.js",
    "scripts": {
        "postinstall": "electron-builder install-app-deps",
        "start": "[ -d node_modules ] || npm install && npx electron .",
        "server": "node ./publish/server.js"
    },
    "dependencies": {
        "electron-updater": "5.0.5"
    },
    "devDependencies": {
        "electron": "19.0.8",
        "electron-builder": "23.1.0",
        "electron-notarize": "1.2.1",
        "eslint": "8.20.0"
    },
    "eslintConfig": {
        "env": {
            "es6": true,
            "browser": true,
            "node": true
        },
        "extends": "eslint:recommended",
        "parserOptions": {
            "ecmaVersion": 2015,
            "sourceType": "module"
        },
        "rules": {
            "array-callback-return": "error",
            "brace-style": [ "error", "stroustrup", { "allowSingleLine": true } ],
            "curly": "error",
            "consistent-return": "error",
            "default-case": "error",
            "default-case-last": "error",
            "indent": [ "error", 4, { "SwitchCase": 1 } ],
            "linebreak-style": "off",
            "no-await-in-loop": "error",
            "no-console": "error",
            "no-constructor-return": "error",
            "no-duplicate-imports": "error",
            "no-else-return": "error",
            "no-invalid-this": "error",
            "no-iterator": "error",
            "no-labels": "error",
            "no-lone-blocks": "error",
            "no-lonely-if": "error",
            "no-promise-executor-return": "error",
            "no-proto": "error",
            "no-self-compare": "error",
            "no-template-curly-in-string": "error",
            "no-trailing-spaces": "error",
            "no-unmodified-loop-condition": "error",
            "no-unreachable-loop": "error",
            "no-unused-private-class-members": "error",
            "prefer-const": [ "error", { "destructuring": "all" } ],
            "require-atomic-updates": "error",
            "semi": [ "error", "always" ]
        },
        "globals": {
            "flatbuffers": "readonly",
            "protobuf": "readonly"
        }
    },
    "build": {
        "appId": "com.lutzroeder.netron",
        "productName": "Netron",
        "files": [ "source/**/*" ],
        "directories": { "buildResources": "./publish" },
        "fileAssociations": [
            { "ext": "armnn",       "name": "Arm NN Model"             },
            { "ext": "caffemodel",  "name": "Caffe Model"              },
            { "ext": "ckpt",        "name": "Model Checkpoint"         },
            { "ext": "cmf",         "name": "CNTK Model"               },
            { "ext": "dlc",         "name": "DLC Model"                },
            { "ext": "dnn",         "name": "CNTK Model"               },
            { "ext": "h5",          "name": "Keras Model"              },
            { "ext": "hd5",         "name": "Keras Model"              },
            { "ext": "hdf5",        "name": "Keras Model"              },
            { "ext": "keras",       "name": "Keras Model"              },
            { "ext": "kmodel",      "name": "Kendryte Model"           },
            { "ext": "lite",        "name": "TensorFlow Lite Model"    },
            { "ext": "mar",         "name": "MXNet Model"              },
            { "ext": "meta",        "name": "TensorFlow Meta Graph"    },
            { "ext": "mlmodel",     "name": "Core ML Model"            },
            { "ext": "mlpackage",   "name": "Core ML Model Package", "isPackage": true },
            { "ext": "mnn",         "name": "MNN Model"                },
            { "ext": "model",       "name": "Model"                    },
            { "ext": "nb",          "name": "Paddle Lite Model"        },
            { "ext": "nn",          "name": "Barracuda Model"          },
            { "ext": "nnp",         "name": "Neural Network Libraries" },
            { "ext": "om",          "name": "DaVinci OM Model"         },
            { "ext": "onnx",        "name": "ONNX Model"               },
            { "ext": "ort",         "name": "ONNX Runtime Model"       },
            { "ext": "paddle",      "name": "PaddlePaddle Model"       },
            { "ext": "param",       "name": "NCNN Model"               },
            { "ext": "pb",          "name": "Protocol Buffer"          },
            { "ext": "pbtxt",       "name": "Text Protocol Buffer"     },
            { "ext": "pdiparams",   "name": "PaddlePaddle Model"       },
            { "ext": "pdmodel",     "name": "PaddlePaddle Model"       },
            { "ext": "pdopt",       "name": "PaddlePaddle Model"       },
            { "ext": "pdparams",    "name": "PaddlePaddle Model"       },
            { "ext": "prototxt",    "name": "Text Protocol Buffer"     },
            { "ext": "pt",          "name": "PyTorch Model"            },
            { "ext": "pth",         "name": "PyTorch Model"            },
            { "ext": "ptl",         "name": "PyTorch Model"            },
            { "ext": "rknn",        "name": "RKNN Model"               },
            { "ext": "t7",          "name": "Torch Model"              },
            { "ext": "tfl",         "name": "TensorFlow Lite Model"    },
            { "ext": "tflite",      "name": "TensorFlow Lite Model"    },
            { "ext": "tmfile",      "name": "Tengine Model"            },
            { "ext": "tnnproto",    "name": "TNN Model"                },
            { "ext": "torchscript", "name": "PyTorch Model"            },
            { "ext": "uff",         "name": "UFF Model"                },
            { "ext": "xmodel",      "name": "Vitis AI Model"           },
            { "ext": "hn",          "name": "Hailo Model"              }
        ],
        "afterSign": "./publish/notarize.js",
        "publish": [
            { "provider": "github", "releaseType": "release" }
        ],
        "linux": {
            "target": [ "AppImage", "snap" ]
        },
        "mac": {
            "artifactName": "${productName}-${version}-mac.${ext}",
            "category": "public.app-category.developer-tools",
            "darkModeSupport": true,
            "gatekeeperAssess": false,
            "hardenedRuntime": true,
            "target": [ "dmg", "zip" ]
        },
        "win": {
            "target": [ "nsis" ],
            "signingHashAlgorithms": [ "sha256" ],
            "verifyUpdateCodeSignature": false
        },
        "dmg": {
            "artifactName": "${productName}-${version}.${ext}",
            "title": "${productName} ${version}",
            "writeUpdateInfo": false,
            "iconSize": 160,
            "contents": [
                { "x": 180, "y": 170 },
                { "x": 480, "y": 170, "type": "link", "path": "/Applications" }
            ]
        },
        "nsis": {
            "differentialPackage": false
        },
        "snap": {
            "plugs": [ "default", "removable-media" ],
            "publish": [ { "provider": "snapStore", "channels": [ "stable" ] } ]
        }
    }
}
